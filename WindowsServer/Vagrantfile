# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

VM_BOX="cdaf/WindowsServer"

# IP address Information
STATIC_IP="192.168.33.101"
# ROUTER="192.168.33.1"

# Vagrant will need 2 interfaces, one for NAT (needed for provision) and one for static public IP
# STATIC_IP_INTERFACE="Ethernet 2"
# NAT_INTERFACE="Ethernet"

# RDP Port
GUEST_RDP_PORT="3389"
HOST_RDP_PORT="33389"
AUTO_CORRECT="true"

# WinRM Credentials (not for setting Windows password!)
WINRM_USER="vagrant"
WINRM_PASSWORD="vagrant"

# Memory and CPUs
MEMORY_MB=2048
CPUS=2

def gui_enabled?
  !ENV.fetch('GUI', '').empty?
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = VM_BOX

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.101"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

#     config.vm.provision "Gateway", type: "shell", run: "always", inline: <<-POWERSHELL
#       New-NetRoute -InterfaceAlias "#{STATIC_IP_INTERFACE}" -NextHop "#{ROUTER}" -DestinationPrefix "0.0.0.0/0"
#       Set-NetIPInterface -InterfaceAlias "#{NAT_INTERFACE}" -InterfaceMetric 5000
#       Set-NetIPInterface -InterfaceAlias "#{STATIC_IP_INTERFACE}" -InterfaceMetric 1
#     POWERSHELL

    config.vm.network "private_network", ip: STATIC_IP
    config.vm.network :forwarded_port, guest: GUEST_RDP_PORT, host: HOST_RDP_PORT, auto_correct: AUTO_CORRECT
    config.vm.box = VM_BOX
    # Change "." to a local folder you want to sync
    # config.vm.synced_folder ".", "/chocolateypackages", disabled: true
    config.vm.guest = :windows
    config.vm.communicator = "winrm"
    config.winrm.username = WINRM_USER
    config.winrm.password = WINRM_PASSWORD
    config.vm.provider 'virtualbox' do |v|
        v.gui = gui_enabled?
        v.memory = MEMORY_MB
        v.cpus = CPUS
    end
end
